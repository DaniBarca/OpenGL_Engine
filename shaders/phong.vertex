#version 330 core

layout(location = 0) in vec3 vertex_modelspace;
layout(location = 1) in vec3 normal_modelspace;
layout(location = 2) in vec2 uvs;

uniform mat4 P;
uniform mat4 V;
uniform mat4 M;

out vec3 fragment_normal;
out vec3 fragment_position;
out vec2 UV;

void main(){
	gl_Position = P * V * M * vec4(vertex_modelspace, 1.0f);
	fragment_position = vec3(M * vec4(vertex_modelspace, 1.0f));
	fragment_normal = normalize(vec3(M * vec4(normal_modelspace,0.0f)));
	UV = uvs;

	//fragment_position = vec3(M * vec4(vertex_modelspace,1.0f));
    //gl_Position = P * V * vec4(fragment_position,1.0f);
}
